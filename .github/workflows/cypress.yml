name: Cypress Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '0 7,13,22 * * *'

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate required secrets
      run: |
        if [ -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
          echo "Error: SLACK_WEBHOOK_URL secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.CYPRESS_APP_URL }}" ]; then
          echo "Error: CYPRESS_APP_URL secret is not set"
          exit 1
        fi
        echo "✅ Required secrets are configured"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install

    - name: Run Cypress tests
      id: cypress
      uses: cypress-io/github-action@v5
      with:
        browser: chrome
        config-file: cypress.config.js
        publish-summary: true
        reporter: mochawesome
        reporter-options: >-
          reportDir=cypress/reports/mochawesome,
          overwrite=false,
          html=true,
          json=true,
          quiet=true,
          reportFilename=mochawesome-[datetime]
      env:
        CYPRESS_APP_URL: ${{ secrets.CYPRESS_APP_URL }}
      continue-on-error: true

    # Add step to process Cypress run results
    - name: Process Cypress results
      if: always()
      run: |
        # Find the Cypress output file
        CYPRESS_OUTPUT="cypress/reports/cypress-run-output.txt"
        
        if [ -f "$CYPRESS_OUTPUT" ]; then
          echo "Found Cypress output file"
          
          # Extract test counts using grep and awk
          TOTAL=$(grep "All specs passed!" "$CYPRESS_OUTPUT" | awk '{print $4}')
          PASSING=$(grep "All specs passed!" "$CYPRESS_OUTPUT" | awk '{print $5}')
          PENDING=$(grep "All specs passed!" "$CYPRESS_OUTPUT" | awk '{print $7}')
          SKIPPED=$(grep "All specs passed!" "$CYPRESS_OUTPUT" | awk '{print $8}')
          
          # Calculate failing (total - passing)
          FAILING=$((TOTAL - PASSING))
          
          # Create results JSON
          cat << EOF > cypress/reports/results.json
{
  "totalTests": ${TOTAL:-0},
  "totalPassed": ${PASSING:-0},
  "totalFailed": ${FAILING:-0},
  "totalPending": ${PENDING:-0},
  "totalSkipped": ${SKIPPED:-0}
}
EOF
          
          # Set GitHub Actions outputs
          echo "TOTAL_TESTS=${TOTAL:-0}" >> $GITHUB_ENV
          echo "TOTAL_PASSED=${PASSING:-0}" >> $GITHUB_ENV
          echo "TOTAL_FAILED=${FAILING:-0}" >> $GITHUB_ENV
          echo "TOTAL_PENDING=${PENDING:-0}" >> $GITHUB_ENV
          echo "TOTAL_SKIPPED=${SKIPPED:-0}" >> $GITHUB_ENV
          
          echo "Test Results Summary:"
          echo "Total: ${TOTAL:-0}"
          echo "Passing: ${PASSING:-0}"
          echo "Failing: ${FAILING:-0}"
          echo "Pending: ${PENDING:-0}"
          echo "Skipped: ${SKIPPED:-0}"
        else
          echo "No Cypress output file found at $CYPRESS_OUTPUT"
          exit 1
        fi

    - name: Display Test Results
      if: always()
      run: |
        echo "📊 Test Results Summary"
        echo "┌────────────────────────────────────────────────────────────────────────┐"
        echo "│ Total Tests: $TOTAL_TESTS"
        echo "│ Passed: $TOTAL_PASSED"
        echo "│ Failed: $TOTAL_FAILED"
        echo "│ Pending: $TOTAL_PENDING"
        echo "│ Skipped: $TOTAL_SKIPPED"
        echo "└────────────────────────────────────────────────────────────────────────┘"