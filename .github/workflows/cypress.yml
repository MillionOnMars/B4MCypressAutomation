name: Cypress Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '0 7,13,22 * * *'

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate required secrets
      run: |
        if [ -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
          echo "Error: SLACK_WEBHOOK_URL secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.CYPRESS_APP_URL }}" ]; then
          echo "Error: CYPRESS_APP_URL secret is not set"
          exit 1
        fi
        echo "✅ Required secrets are configured"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install

    - name: Run Cypress tests
      id: cypress
      uses: cypress-io/github-action@v5
      with:
        browser: chrome
        config-file: cypress.config.js
        publish-summary: true
        reporter: 'mocha-junit-reporter'
        reporter-options: >
          mochaFile=cypress/reports/junit-[hash].xml,
          toConsole=true,
          output=cypress/reports/cypress-run-output.txt,
          testsuitesTitle=false
      env:
        CYPRESS_APP_URL: ${{ secrets.CYPRESS_APP_URL }}
      continue-on-error: true

    - name: Process test results
      id: test-results
      if: always()
      run: |
        # Find the latest junit report
        REPORT=$(find cypress/reports -name "junit-*.xml" -type f -print0 | xargs -0 ls -t | head -n1)
        
        if [ -f "$REPORT" ]; then
          echo "Processing test results from: $REPORT"
          echo "Report content:"
          cat "$REPORT"
          
          # Install xmllint if needed
          if ! command -v xmllint &> /dev/null; then
            echo "Installing xmllint..."
            apt-get update && apt-get install -y libxml2-utils
          fi
          
          # Extract test counts with fallbacks
          TOTAL=$(xmllint --xpath "string(//testsuite/@tests)" "$REPORT" || echo "0")
          FAILURES=$(xmllint --xpath "string(//testsuite/@failures)" "$REPORT" || echo "0")
          SKIPPED=$(xmllint --xpath "string(//testsuite/@skipped)" "$REPORT" || echo "0")
          
          # Set defaults if empty
          TOTAL=${TOTAL:-0}
          FAILURES=${FAILURES:-0}
          SKIPPED=${SKIPPED:-0}
          
          # Calculate passing tests
          PASSING=$((TOTAL - FAILURES - SKIPPED))
          
          # Set environment variables
          echo "TOTAL_TESTS=$TOTAL" >> $GITHUB_ENV
          echo "PASSING_TESTS=$PASSING" >> $GITHUB_ENV
          echo "FAILING_TESTS=$FAILURES" >> $GITHUB_ENV
          echo "SKIPPED_TESTS=$SKIPPED" >> $GITHUB_ENV
          
          echo "Test Results Summary:"
          echo "┌────────────────────────────────┐"
          echo "│ Total Tests: $TOTAL"
          echo "│ Passing: $PASSING"
          echo "│ Failing: $FAILURES"
          echo "│ Skipped: $SKIPPED"
          echo "└────────────────────────────────┘"
          
          # Set outputs
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          echo "passing=$PASSING" >> $GITHUB_OUTPUT
          echo "failing=$FAILURES" >> $GITHUB_OUTPUT
        else
          echo "No test report found in cypress/reports/"
          echo "Available files:"
          find cypress/reports -type f | sort
          
          # Create a default empty report
          mkdir -p cypress/reports
          echo '<testsuites tests="0" failures="0" skipped="0"></testsuites>' > cypress/reports/empty-report.xml
          
          # Set default values
          echo "TOTAL_TESTS=0" >> $GITHUB_ENV
          echo "PASSING_TESTS=0" >> $GITHUB_ENV
          echo "FAILING_TESTS=0" >> $GITHUB_ENV
          echo "SKIPPED_TESTS=0" >> $GITHUB_ENV
          
          echo "total=0" >> $GITHUB_OUTPUT
          echo "passing=0" >> $GITHUB_OUTPUT
          echo "failing=0" >> $GITHUB_OUTPUT
        fi

    - name: Display test results
      if: always()
      run: |
        echo "📊 Final Test Results:"
        echo "┌────────────────────────────────┐"
        echo "│ Total Tests: $TOTAL_TESTS"
        echo "│ Passing: $PASSING_TESTS"
        echo "│ Failing: $FAILING_TESTS"
        echo "│ Skipped: $SKIPPED_TESTS"
        echo "└────────────────────────────────┘"