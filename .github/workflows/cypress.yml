name: Cypress Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '0 7,13,22 * * *'

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate required secrets
      run: |
        if [ -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
          echo "Error: SLACK_WEBHOOK_URL secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.CYPRESS_APP_URL }}" ]; then
          echo "Error: CYPRESS_APP_URL secret is not set"
          exit 1
        fi
        echo "âœ… Required secrets are configured"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install

    - name: Run Cypress tests
      id: cypress
      uses: cypress-io/github-action@v5
      with:
        browser: chrome
        config-file: cypress.config.js
        publish-summary: true
        reporter: mochawesome
        reporter-options: >-
          reportDir=cypress/reports/mochawesome,
          overwrite=false,
          html=true,
          json=true,
          quiet=true,
          reportFilename=mochawesome-[datetime]
      env:
        CYPRESS_APP_URL: ${{ secrets.CYPRESS_APP_URL }}
      continue-on-error: true

    # Add step to process Cypress run results
    - name: Process Cypress results
      if: always()
      run: |
        LATEST_REPORT=$(ls -t cypress/reports/mochawesome/mochawesome*.json | head -n 1)
        
        if [ -f "$LATEST_REPORT" ]; then
          echo "Found report file: $LATEST_REPORT"
          
          # Debug: Print full report content
          echo "Full report content:"
          cat "$LATEST_REPORT"
          
          # Extract stats directly
          TOTAL=$(jq '.stats.tests' "$LATEST_REPORT")
          PASSING=$(jq '.stats.passes' "$LATEST_REPORT")
          FAILING=$(jq '.stats.failures' "$LATEST_REPORT")
          
          # Ensure numbers are valid
          TOTAL=${TOTAL:-0}
          PASSING=${PASSING:-0}
          FAILING=${FAILING:-0}
          
          echo "Test Results Summary:"
          echo "Total: $TOTAL"
          echo "Passing: $PASSING"
          echo "Failing: $FAILING"
          
          # Create results.json with explicit numbers
          cat << EOF > cypress/reports/results.json
{
  "totalTests": $TOTAL,
  "totalPassed": $PASSING,
  "totalFailed": $FAILING
}
EOF
          echo "Created results.json with actual numbers"
          cat cypress/reports/results.json
        else
          echo "No mochawesome report found"
          ls -la cypress/reports/mochawesome/
          exit 1
        fi

    - name: Get test results
      id: test-results
      if: always()
      run: |
        if [ -f "cypress/reports/results.json" ]; then
          # Read values directly
          TOTAL=$(jq '.totalTests' cypress/reports/results.json)
          PASSED=$(jq '.totalPassed' cypress/reports/results.json)
          FAILED=$(jq '.totalFailed' cypress/reports/results.json)
          
          # Ensure we have numbers
          if [ -z "$TOTAL" ] || [ -z "$PASSED" ] || [ -z "$FAILED" ]; then
            echo "Error: Missing values in results.json"
            cat cypress/reports/results.json
            exit 1
          fi
          
          # Set outputs
          echo "total=$TOTAL" >> "$GITHUB_OUTPUT"
          echo "passed=$PASSED" >> "$GITHUB_OUTPUT"
          echo "failed=$FAILED" >> "$GITHUB_OUTPUT"
          
          echo "Final Test Results Summary:"
          echo "Total: $TOTAL"
          echo "Passed: $PASSED"
          echo "Failed: $FAILED"
        else
          echo "Error: results.json not found"
          exit 1
        fi

      # Add step to get console errors count
    - name: Get console errors
      id: console-errors
      if: always()
      run: |
        if [ -f "cypress/reports/consoleErrors.json" ]; then
          TOTAL_ERRORS=$(jq -r '.totalErrors' cypress/reports/consoleErrors.json)
          echo "total=$TOTAL_ERRORS" >> "$GITHUB_OUTPUT"
          echo "Found $TOTAL_ERRORS console errors"
        else
          echo "total=0" >> "$GITHUB_OUTPUT"
          echo "No consoleErrors.json found"
        fi