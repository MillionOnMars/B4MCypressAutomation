name: Cypress Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '0 7,13,22 * * *'

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate required secrets
      run: |
        if [ -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
          echo "Error: SLACK_WEBHOOK_URL secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.CYPRESS_APP_URL }}" ]; then
          echo "Error: CYPRESS_APP_URL secret is not set"
          exit 1
        fi
        echo "âœ… Required secrets are configured"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci

    - name: Run Cypress tests
      id: cypress
      uses: cypress-io/github-action@v5
      with:
        browser: chrome
        config-file: cypress.config.js
        publish-summary: true
        reporter: json
        reporter-options: "reportDir=cypress/reports,overwrite=true,json=true,html=false"
      env:
        CYPRESS_APP_URL: ${{ secrets.CYPRESS_APP_URL }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      continue-on-error: true

    - name: Get test results
      id: test-results
      if: always()
      run: |
        # Debug: Show available files
        echo "Available report files:"
        find cypress -type f -name "*.json"
        
        # Try to read from Cypress built-in summary
        if [ -f "cypress/reports/results.json" ]; then
          echo "Reading Cypress results summary..."
          
          # Extract stats using jq with debug output
          echo "File contents:"
          cat cypress/reports/results.json
          
          # Parse test counts directly from results
          TOTAL=$(jq -r '.totalTests // 0' cypress/reports/results.json)
          PASSED=$(jq -r '.totalPassed // 0' cypress/reports/results.json)
          FAILED=$(jq -r '.totalFailed // 0' cypress/reports/results.json)
          
          echo "Extracted counts from Cypress summary:"
          echo "Total: $TOTAL"
          echo "Passed: $PASSED"
          echo "Failed: $FAILED"
        else
          echo "Warning: Could not find Cypress results summary"
          echo "Falling back to default values"
          TOTAL=0
          PASSED=0
          FAILED=0
        fi
        
        # Set outputs with validation
        echo "total=$TOTAL" >> "$GITHUB_OUTPUT"
        echo "passed=$PASSED" >> "$GITHUB_OUTPUT"
        echo "failed=$FAILED" >> "$GITHUB_OUTPUT"

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-results
        path: cypress/reports
        if-no-files-found: warn
        retention-days: 14

    - name: Get credits data
      id: credits
      if: always()
      run: |
        if [ -f "cypress/fixtures/credits.json" ]; then
          # Format credits data using jq
          CREDITS=$(jq -r 'map("Text Model: \(.textModel)\nCredits Used: \(.Credits)") | join("\n")' cypress/fixtures/credits.json)
          # Escape newlines for GitHub Actions output
          CREDITS="${CREDITS//$'\n'/'\n'}"
          echo "credits=$CREDITS" >> $GITHUB_OUTPUT
          echo "Found credits data:"
          echo "$CREDITS"
        else
          echo "No credits.json file found"
          echo "credits=No credits data available" >> $GITHUB_OUTPUT
        fi

    - name: Send Slack notification
      if: always()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "username": "GitHub Actions",
            "icon_emoji": ":github:",
            "text": "*ðŸ¤– Cypress Test Results*\n\n*Environment:* ${{ env.CYPRESS_APP_URL || 'Staging' }}\n*Status:* ${{ steps.cypress.outcome }}\n\n*Test Results*\nâ€¢ Total Tests: ${{ steps.test-results.outputs.total }}\nâ€¢ Passed Tests: ${{ steps.test-results.outputs.passed }}\nâ€¢ Failed Tests: ${{ steps.test-results.outputs.failed }}\n\n*Credits Usage*\n${{ steps.credits.outputs.credits }}\n\n*View Full Report:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Click Here> ðŸ“Š"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}