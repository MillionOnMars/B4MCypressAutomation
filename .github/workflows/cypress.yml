name: Cypress Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '0 7,13,22 * * *'

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate required secrets
      run: |
        if [ -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
          echo "Error: SLACK_WEBHOOK_URL secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.CYPRESS_APP_URL }}" ]; then
          echo "Error: CYPRESS_APP_URL secret is not set"
          exit 1
        fi
        echo "âœ… Required secrets are configured"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci

    - name: Run Cypress tests
      id: cypress
      uses: cypress-io/github-action@v5
      with:
        browser: chrome
        config-file: cypress.config.js
        publish-summary: true
        install: false
      env:
        CYPRESS_APP_URL: ${{ secrets.CYPRESS_APP_URL }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      continue-on-error: true

    - name: Get test results
      id: test-results
      if: always()
      run: |
        # Initialize variables with defaults
        TOTAL=0
        PASSED=0
        FAILED=0
        
        # Function to check and parse JSON file
        check_results() {
          local file=$1
          if [ -f "$file" ] && [ -s "$file" ]; then
            echo "Checking file: $file"
            if jq empty "$file" 2>/dev/null; then
              TOTAL=$(jq -r '.stats.tests // .totalTests // 0' "$file")
              PASSED=$(jq -r '.stats.passes // .passes // 0' "$file")
              FAILED=$(jq -r '.stats.failures // .failures // 0' "$file")
              return 0
            fi
          fi
          return 1
        }

        # Try each possible location
        for results_file in \
          "cypress/results/results.json" \
          "mochawesome-report/mochawesome.json" \
          "cypress/reports/mochawesome.json"; do
          if check_results "$results_file"; then
            echo "Successfully parsed $results_file"
            break
          fi
        done

        # Set outputs regardless of success/failure
        {
          echo "total=$TOTAL"
          echo "passed=$PASSED"
          echo "failed=$FAILED"
        } >> "$GITHUB_OUTPUT"

        # Debug output
        echo "Test Results Summary:"
        echo "Total: $TOTAL"
        echo "Passed: $PASSED"
        echo "Failed: $FAILED"

        # Don't exit with error even if no results found
        exit 0

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-results
        path: cypress/reports
        if-no-files-found: warn
        retention-days: 14

    - name: Get credits data
      id: credits
      if: always()
      run: |
        if [ -f "cypress/fixtures/credits.json" ]; then
          # Format credits data with custom format and credit(s)
          CREDITS=$(jq -r 'map("\(.textModel): \(.Credits) credit" + (if .Credits == "1" then "(s)" else "(s)" end)) | join("\n")' cypress/fixtures/credits.json)
          echo "credits=$CREDITS" >> $GITHUB_OUTPUT
          echo "Found credits data:"
          echo "$CREDITS"
        else
          echo "No credits.json file found"
          echo "credits=No credits data available" >> $GITHUB_OUTPUT
        fi

    - name: Send Slack notification
      if: always()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "username": "GitHub Actions",
            "icon_emoji": ":github:",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*ðŸ¤– Cypress Test Results*\n\n*Environment:* ${{ env.CYPRESS_APP_URL || 'Staging' }}\n*Status:* ${{ steps.cypress.outcome }}\n\n*Test Results*\nâ€¢ Total Tests: ${{ steps.test-results.outputs.total }}\nâ€¢ Passed Tests: ${{ steps.test-results.outputs.passed }}\nâ€¢ Failed Tests: ${{ steps.test-results.outputs.failed }}\n\n*Credits Usage*\n${{ steps.credits.outputs.credits }}\n\n*View Full Report:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Click Here> ðŸ“Š"
                }
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}